# To build:
#
#   docker build -f ./src/main/docker/Dockerfile.jvm -t github-webhook-listener-jvm .
#
# To run:
#
#   docker run -p 8080:8080 github-webhook-listener-jvm
#
FROM --platform=linux/amd64 gradle:8-jdk21 AS build
COPY --chown=gradle:gradle . /home/gradle/src
RUN ls -alh /home/gradle/src
WORKDIR /home/gradle/src
RUN gradle buildFatJar --no-daemon

##################################################

FROM --platform=linux/amd64 eclipse-temurin:21-alpine as jre-build

# Create a custom Java runtime
RUN apk add binutils --no-cache
RUN $JAVA_HOME/bin/jlink \
        --add-modules java.base \
        --add-modules java.xml \
        --add-modules java.naming \
        --strip-debug \
        --no-man-pages \
        --no-header-files \
        --compress=2 \
        --output /javaruntime

##################################################

FROM --platform=linux/amd64 alpine:latest

ENV JAVA_HOME=/opt/java
ENV PATH "${JAVA_HOME}/bin:${PATH}"
COPY --from=jre-build /javaruntime $JAVA_HOME

RUN mkdir -p /opt/app
RUN mkdir -p /opt/app/config
RUN adduser -u 1001 -h /opt/app -s /bin/sh -D appuser
WORKDIR /opt/app
RUN chown -R appuser /opt/app && chmod -R "g+rwX" /opt/app && chown -R appuser:root /opt/app

RUN apk add --no-cache git curl jq

COPY --from=build --chown=appuser:root /home/gradle/src/build/libs/github-webhook-listener-fat.jar /opt/app/github-webhook-listener-fat.jar
COPY --from=build --chown=appuser:root /home/gradle/src/config/application-dummy.yaml /opt/app/config/config.yaml
COPY --from=build --chown=appuser:root /home/gradle/src/scripts/java-exec /opt/app/java-exec

EXPOSE 8080
USER appuser

CMD ["/opt/app/java-exec","-jar","/opt/app/github-webhook-listener-fat.jar","/opt/app/config/config.yaml"]
